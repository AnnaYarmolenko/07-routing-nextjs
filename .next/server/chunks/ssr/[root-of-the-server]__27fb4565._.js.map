{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/components/Modal/Modal.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"backdrop\": \"Modal-module__sR2AWG__backdrop\",\n  \"modal\": \"Modal-module__sR2AWG__modal\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///Users/anna_yarmolenko/IT/Next/HW/07-routing-nextjs/components/Modal/Modal.tsx"],"sourcesContent":["import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport type { ReactNode } from 'react';\nimport css from './Modal.module.css';\n\ninterface ModalProps {\n  onClose: () => void;\n  children: ReactNode;\n}\n\nexport default function Modal({ onClose, children }: ModalProps) {\n  const handleBackdropClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.body.style.overflow = '';\n    };\n  }, [onClose]);\n\n  return createPortal(\n    <div\n      className={css.backdrop}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      onClick={handleBackdropClick}\n    >\n      <div className={css.modal}>{children}</div>\n    </div>,\n    document.body,\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;;;;;AAOe,SAAS,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAc;IAC7D,MAAM,sBAAsB,CAAC;QAC3B,IAAI,MAAM,MAAM,KAAK,MAAM,aAAa,EAAE;YACxC;QACF;IACF;IAEA,IAAA,kNAAS,EAAC;QACR,MAAM,gBAAgB,CAAC;YACrB,IAAI,EAAE,GAAG,KAAK,UAAU;gBACtB;YACF;QACF;QAEA,SAAS,gBAAgB,CAAC,WAAW;QACrC,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;QAE/B,OAAO;YACL,SAAS,mBAAmB,CAAC,WAAW;YACxC,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;QACjC;IACF,GAAG;QAAC;KAAQ;IAEZ,qBAAO,IAAA,4NAAY,gBACjB,8OAAC;QACC,WAAW,mJAAG,CAAC,QAAQ;QACvB,MAAK;QACL,cAAW;QACX,SAAS;kBAET,cAAA,8OAAC;YAAI,WAAW,mJAAG,CAAC,KAAK;sBAAG;;;;;;;;;;cAE9B,SAAS,IAAI;AAEjB","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///Users/anna_yarmolenko/IT/Next/HW/07-routing-nextjs/app/%40modal/%28.%29notes/%5Bid%5D/NotePreview.client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/@modal/(.)notes/[id]/NotePreview.client.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/@modal/(.)notes/[id]/NotePreview.client.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAmT,GAChV,iFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///Users/anna_yarmolenko/IT/Next/HW/07-routing-nextjs/app/%40modal/%28.%29notes/%5Bid%5D/NotePreview.client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/@modal/(.)notes/[id]/NotePreview.client.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/@modal/(.)notes/[id]/NotePreview.client.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA+R,GAC5T,6DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///Users/anna_yarmolenko/IT/Next/HW/07-routing-nextjs/app/%40modal/%28.%29notes/%5Bid%5D/page.tsx"],"sourcesContent":["\n\nimport { use } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport Modal from \"@/components/Modal/Modal\";\nimport NotePreview from \"@/app/@modal/(.)notes/[id]/NotePreview.client\";\n\ntype Props = {\n  params: Promise<{ id: string }>;\n};\n\nexport default function NotePreviewPage({ params }: Props) {\n  const router = useRouter();\n  const { id } = use(params);\n\n  return (\n    <Modal onClose={() => router.back()}>\n      <NotePreview id={id} onBack={() => router.back()} />\n    </Modal>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AACA;AACA;;;;;;AAMe,SAAS,gBAAgB,EAAE,MAAM,EAAS;IACvD,MAAM,SAAS,IAAA,kMAAS;IACxB,MAAM,EAAE,EAAE,EAAE,GAAG,IAAA,4MAAG,EAAC;IAEnB,qBACE,8OAAC,wIAAK;QAAC,SAAS,IAAM,OAAO,IAAI;kBAC/B,cAAA,8OAAC,4KAAW;YAAC,IAAI;YAAI,QAAQ,IAAM,OAAO,IAAI;;;;;;;;;;;AAGpD","debugId":null}}]
}