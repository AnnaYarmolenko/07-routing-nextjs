{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///Users/anna_yarmolenko/IT/Next/HW/07-routing-nextjs/lib/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { type Note } from '../types/note';\nimport { type NoteTag } from '../types/note';\n\nexport interface NoteSearchResponse {\n  page: number;\n  notes: Note[];\n  totalPages: number;\n  tag: NoteTag | null;\n}\n\nexport async function fetchNotes(SearchText: string, page: number, tag?: string) {\n\n  const params: Record<string, string | number> = {\n    search: SearchText,\n    page,\n    perPage: 10,\n  };\n\n  if (tag) {\n    params.tag = tag;\n  } \n\n  const response = await axios.get<NoteSearchResponse>(\n    'https://notehub-public.goit.study/api/notes',\n    {\n      params,\n      headers: {\n        Authorization: `Bearer ${process.env.NEXT_PUBLIC_NOTEHUB_TOKEN}`,\n      },\n    },\n  );\n\n  return response.data;\n}\n\nexport async function fetchNoteById(noteId: Note['id']) {\n  const response = await axios.get<Note>(\n    `https://notehub-public.goit.study/api/notes/${noteId}`,\n    {\n      headers: {\n        Authorization: `Bearer ${process.env.NEXT_PUBLIC_NOTEHUB_TOKEN}`,\n      },\n    },\n  );\n\n  return response.data;\n}\n\nexport async function deleteNote(noteId: string) {\n  const response = await axios.delete<Note>(\n    `https://notehub-public.goit.study/api/notes/${noteId}`,\n    {\n      headers: {\n        Authorization: `Bearer ${process.env.NEXT_PUBLIC_NOTEHUB_TOKEN}`,\n      },\n    },\n  );\n\n  return response.data;\n}\n\ninterface NewNote {\n  title: string;\n  content: string;\n  tag: NoteTag;\n}\nexport async function createNote(newNote: NewNote) {\n  const response = await axios.post<Note>(\n    'https://notehub-public.goit.study/api/notes',\n    newNote,\n    {\n      headers: {\n        Authorization: `Bearer ${process.env.NEXT_PUBLIC_NOTEHUB_TOKEN}`,\n      },\n    },\n  );\n\n  return response.data;\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAWO,eAAe,WAAW,UAAkB,EAAE,IAAY,EAAE,GAAY;IAE7E,MAAM,SAA0C;QAC9C,QAAQ;QACR;QACA,SAAS;IACX;IAEA,IAAI,KAAK;QACP,OAAO,GAAG,GAAG;IACf;IAEA,MAAM,WAAW,MAAM,gJAAK,CAAC,GAAG,CAC9B,+CACA;QACE;QACA,SAAS;YACP,eAAe,CAAC,OAAO,2LAAyC;QAClE;IACF;IAGF,OAAO,SAAS,IAAI;AACtB;AAEO,eAAe,cAAc,MAAkB;IACpD,MAAM,WAAW,MAAM,gJAAK,CAAC,GAAG,CAC9B,CAAC,4CAA4C,EAAE,QAAQ,EACvD;QACE,SAAS;YACP,eAAe,CAAC,OAAO,2LAAyC;QAClE;IACF;IAGF,OAAO,SAAS,IAAI;AACtB;AAEO,eAAe,WAAW,MAAc;IAC7C,MAAM,WAAW,MAAM,gJAAK,CAAC,MAAM,CACjC,CAAC,4CAA4C,EAAE,QAAQ,EACvD;QACE,SAAS;YACP,eAAe,CAAC,OAAO,2LAAyC;QAClE;IACF;IAGF,OAAO,SAAS,IAAI;AACtB;AAOO,eAAe,WAAW,OAAgB;IAC/C,MAAM,WAAW,MAAM,gJAAK,CAAC,IAAI,CAC/B,+CACA,SACA;QACE,SAAS;YACP,eAAe,CAAC,OAAO,2LAAyC;QAClE;IACF;IAGF,OAAO,SAAS,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/app/notes/filter/[...slug]/page.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"app\": \"page-module__gS09Sa__app\",\n  \"button\": \"page-module__gS09Sa__button\",\n  \"toolbar\": \"page-module__gS09Sa__toolbar\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///Users/anna_yarmolenko/IT/Next/HW/07-routing-nextjs/app/notes/filter/%5B...slug%5D/Notes.client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/notes/filter/[...slug]/Notes.client.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/notes/filter/[...slug]/Notes.client.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA+S,GAC5U,6EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///Users/anna_yarmolenko/IT/Next/HW/07-routing-nextjs/app/notes/filter/%5B...slug%5D/Notes.client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/notes/filter/[...slug]/Notes.client.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/notes/filter/[...slug]/Notes.client.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA2R,GACxT,yDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///Users/anna_yarmolenko/IT/Next/HW/07-routing-nextjs/app/notes/filter/%5B...slug%5D/page.tsx"],"sourcesContent":["import { dehydrate, HydrationBoundary, QueryClient } from '@tanstack/react-query';\nimport { fetchNotes } from '@/lib/api';\nimport css from './page.module.css';\nimport NotesClient from './Notes.client';\n\ntype Props = {\n  params: Promise<{ slug: string[] }>;\n}\n\nexport default async function Notes({params}: Props) {\n  const { slug } = await params;\n  const tag = slug[0] || 'All';\n\n  const queryClient = new QueryClient();\n  await queryClient.prefetchQuery({\n        queryKey: ['notes', '', 1, tag],\n    queryFn: () => fetchNotes('', 1, tag === 'All' ? '' : tag),\n  });\n\n  return (\n     <div className={css.app}>\n      <HydrationBoundary state={dehydrate(queryClient)}>\n        <NotesClient tag={tag} />\n      </HydrationBoundary>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAMe,eAAe,MAAM,EAAC,MAAM,EAAQ;IACjD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM;IACvB,MAAM,MAAM,IAAI,CAAC,EAAE,IAAI;IAEvB,MAAM,cAAc,IAAI,4LAAW;IACnC,MAAM,YAAY,aAAa,CAAC;QAC1B,UAAU;YAAC;YAAS;YAAI;YAAG;SAAI;QACnC,SAAS,IAAM,IAAA,wHAAU,EAAC,IAAI,GAAG,QAAQ,QAAQ,KAAK;IACxD;IAEA,qBACG,8OAAC;QAAI,WAAW,uKAAG,CAAC,GAAG;kBACtB,cAAA,8OAAC,yMAAiB;YAAC,OAAO,IAAA,wLAAS,EAAC;sBAClC,cAAA,8OAAC,uKAAW;gBAAC,KAAK;;;;;;;;;;;;;;;;AAI1B","debugId":null}}]
}